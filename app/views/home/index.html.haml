.jumbotron
  .container
    %h1 Welcome to SetPlaylist!
    %p SetPlaylist is a simple website that generates and plays a playlist based on the inputted artist's most recent concert setlist. To begin, start typing an artists name below:
    %p
    %form.form-horizontal{action: "/playlist", method: "get"}
      .form-group.form-group-lg{style: "padding-left: 14px;"}
        .row
          .col-xs-4
            #remote
              %input.form-control.typeahead{placeholder: "Artist", type: "text", name: "artist"}
            %br
        %input.btn.btn-primary.btn-lg{type: "submit", value: "Begin »"}
        %a.btn.btn-success.btn-lg{role: "button", href: "/about"} Learn more »
.container
  .row
    %h2 Staff Picks
    %h4 Check out what we're listening to:
    - @featured_events.each do |event|
      .col-md-4
        %h2= event["displayName"]
        %p
        -event["performance"].take(10).each do |artist|
          = link_to(artist["displayName"], "/playlist?artist=#{artist["displayName"]}") + ", "
        = "and more!"
        %p
          %br
          %a.btn.btn-default{href: "/event/#{event['id']}", role: "button"} View details »
:css
  .typeahead, .tt-query, .tt-hint {
      border: 2px solid #CCCCCC;
      border-radius: 8px 8px 8px 8px;
      font-size: 24px;
      height: 30px;
      line-height: 30px;
      outline: medium none;
      padding: 8px 12px;
      width: 396px;
  }
  .typeahead {
      background-color: #FFFFFF;
  }
  .typeahead:focus {
      border: 2px solid #0097CF;
  }
  .tt-query {
      box-shadow: 0 1px 1px rgba(0, 0, 0, 0.075) inset;
  }
  .tt-hint {
      color: #999999;
  }
  .tt-dropdown-menu {
      background-color: #FFFFFF;
      border: 1px solid rgba(0, 0, 0, 0.2);
      border-radius: 8px 8px 8px 8px;
      box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2);
      margin-top: 12px;
      padding: 8px 0;
      width: 422px;
  }
  .tt-suggestion {
      font-size: 18px;
      line-height: 24px;
      padding: 3px 20px;
  }
  .tt-suggestion.tt-cursor {
      background-color: #0097CF;
      color: #FFFFFF;
  }
  .tt-suggestion p {
      margin: 0;
  }
  .gist {
      font-size: 14px;
  }
:javascript
  //<![CDATA[ 
  $(window).load(function(){
  // Instantiate the Bloodhound suggestion engine
  var artists = new Bloodhound({
      datumTokenizer: function (datum) {
          return Bloodhound.tokenizers.whitespace(datum.value);
      },
      queryTokenizer: Bloodhound.tokenizers.whitespace,
      remote: {
          url: 'http://ws.audioscrobbler.com/2.0/?method=artist.search&artist=%QUERY&api_key=a644174242fc08b5b5046e17f12b6ddd&format=json&limit=5',
          filter: function (artists) {
              return $.map(artists.results.artistmatches.artist, function (artist) {
                  return {
                      value: artist.name
                  };
              });
            }
      }
  });
  
  // Initialize the Bloodhound suggestion engine
  artists.initialize();
  
  // Instantiate the Typeahead UI
  $('.typeahead').typeahead(null, {
      displayKey: 'value',
      source: artists.ttAdapter()
  });
  });//]]>